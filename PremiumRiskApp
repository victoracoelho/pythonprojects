#### IMPORTANDO OS PRINCIPAIS PACOTES ####
from datetime import datetime
import numpy as np
import pandas as pd
from pandas_datareader import data as wb

### DEFININDO PERÍODOS, LISTAS A SEREM UTILIZADOS PARA BUSCAR OS DADOS DE PREÇO DAS AÇÕES ###
ano_atual = datetime.now().date()
ano_inicio = ano_atual.replace(year=ano_atual.year - 5)
ano_iniciado = ano_atual.replace(year=ano_atual.year - 10)
lista = ['^BVSP']
data = pd.DataFrame()

### PROGRAMA PRINCIPAL ###
'''
Nesta parte da aplicação, o código irá coletar os dados de fechamento ajustados da ação definida pelo usuário 
conjuntamente com os dados de fechamento do índice IBOVESPA. 
Serão captados os dados históricos de 5 anos dos dois ativos para realizar o cálculo do beta do ativo desejado.
'''
while True:
    print('-='*30)
    print()
    print('1 - CALCULAR O PRÊMIO DE RISCO DE UMA AÇÃO')
    print()
    print('2 - MOSTRAR RESULTADOS')
    print()
    print('-=' * 30)
    i = int(input('Digite a opção desejada >>> '))
    if i == 1:
        stock = str(input('Digite o ticker da ação [ex.: PETR4.SA]: ')).upper()
        lista.append(stock)
        '''
        Coletando os dados e manipulando para calcular o BETA do ativo escolhido
        '''
        for t in lista:
            try:
                data[t] = wb.DataReader(t, 'yahoo', ano_inicio, ano_atual)['Adj Close']
                data = data.dropna()
                sec_returns = np.log(data / data.shift(1))
                cov = sec_returns.cov() * 250
                cov_with_market = cov.iloc[0, 1]
                market_var = sec_returns['^BVSP'].var() * 250
                stock_beta = cov_with_market / market_var
            except Exception as erro:
                print(f'LENTIDÃO PARA CARREGAR OS DADOS..., MOTIVO: {erro}')
                print()

    print(f'DADOS CARREGADOS PARA {stock}')
    print()
    if i == 2:
        print('###'*20)
        break

### O trecho de código abaixo irá fazer o cálculo do prêmio de risco do ativo desejado através da metodologia CAPM

ibov = wb.DataReader('^BVSP', data_source='yahoo', start=ano_iniciado, end=ano_atual)['Adj Close']
ibov = ibov.dropna()
retorno = np.log(ibov / ibov.shift(1))
média = np.mean(retorno)
retornoIBOV = média * 100
er = 0.0425 + stock_beta * (retornoIBOV - 0.0425)
print(f'O prêmio de risco para {stock} com um beta de {stock_beta:.2f} é {er*100:.2f}%')
